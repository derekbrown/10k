{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MediaFull = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nconst NFTDataContext_1 = require(\"../context/NFTDataContext\");\n\nconst MediaObject_1 = require(\"../components/MediaObject\");\n\nconst useMediaContext_1 = require(\"../context/useMediaContext\");\n\nconst getContentDataOptions_1 = require(\"../utils/getContentDataOptions\");\n\nconst MediaFull = _ref => {\n  let {\n    a11yIdPrefix,\n    getContentData = getContentDataOptions_1.defaultGetContentData,\n    className\n  } = _ref;\n  const {\n    getStyles\n  } = useMediaContext_1.useMediaContext();\n  const {\n    nft: {\n      data\n    },\n    metadata: {\n      metadata,\n      error\n    }\n  } = react_1.useContext(NFTDataContext_1.NFTDataContext);\n\n  const getContent = () => {\n    if (metadata && data) {\n      return jsx_runtime_1.jsx(MediaObject_1.MediaObject, Object.assign({\n        isFullPage: true,\n        a11yIdPrefix: a11yIdPrefix\n      }, getContentData(data, metadata)), void 0);\n    }\n\n    if (error) {\n      return jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"mediaLoader\"), {\n        children: \"error fetching...\"\n      }), void 0);\n    }\n\n    return jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"mediaLoader\"), {\n      children: \"loading...\"\n    }), void 0);\n  };\n\n  const media = getContent();\n  return jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"fullMediaWrapper\", className), {\n    children: media\n  }), void 0);\n};\n\nexports.MediaFull = MediaFull;","map":{"version":3,"sources":["/Users/derekbrown/workspace/10kdigits/node_modules/@zoralabs/nft-components/dist/nft-full/MediaFull.js"],"names":["Object","defineProperty","exports","value","MediaFull","jsx_runtime_1","require","react_1","NFTDataContext_1","MediaObject_1","useMediaContext_1","getContentDataOptions_1","a11yIdPrefix","getContentData","defaultGetContentData","className","getStyles","useMediaContext","nft","data","metadata","error","useContext","NFTDataContext","getContent","jsx","MediaObject","assign","isFullPage","children","media"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;;AACA,MAAMC,aAAa,GAAGC,OAAO,CAAC,mBAAD,CAA7B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,2BAAD,CAAhC;;AACA,MAAMG,aAAa,GAAGH,OAAO,CAAC,2BAAD,CAA7B;;AACA,MAAMI,iBAAiB,GAAGJ,OAAO,CAAC,4BAAD,CAAjC;;AACA,MAAMK,uBAAuB,GAAGL,OAAO,CAAC,gCAAD,CAAvC;;AACA,MAAMF,SAAS,GAAG,QAAkG;AAAA,MAAjG;AAAEQ,IAAAA,YAAF;AAAgBC,IAAAA,cAAc,GAAGF,uBAAuB,CAACG,qBAAzD;AAAgFC,IAAAA;AAAhF,GAAiG;AAChH,QAAM;AAAEC,IAAAA;AAAF,MAAgBN,iBAAiB,CAACO,eAAlB,EAAtB;AACA,QAAM;AAAEC,IAAAA,GAAG,EAAE;AAAEC,MAAAA;AAAF,KAAP;AAAiBC,IAAAA,QAAQ,EAAE;AAAEA,MAAAA,QAAF;AAAYC,MAAAA;AAAZ;AAA3B,MAAoDd,OAAO,CAACe,UAAR,CAAmBd,gBAAgB,CAACe,cAApC,CAA1D;;AACA,QAAMC,UAAU,GAAG,MAAM;AACrB,QAAIJ,QAAQ,IAAID,IAAhB,EAAsB;AAClB,aAAQd,aAAa,CAACoB,GAAd,CAAkBhB,aAAa,CAACiB,WAAhC,EAA6C1B,MAAM,CAAC2B,MAAP,CAAc;AAAEC,QAAAA,UAAU,EAAE,IAAd;AAAoBhB,QAAAA,YAAY,EAAEA;AAAlC,OAAd,EAAgEC,cAAc,CAACM,IAAD,EAAOC,QAAP,CAA9E,CAA7C,EAA8I,KAAK,CAAnJ,CAAR;AACH;;AACD,QAAIC,KAAJ,EAAW;AACP,aAAOhB,aAAa,CAACoB,GAAd,CAAkB,KAAlB,EAAyBzB,MAAM,CAAC2B,MAAP,CAAc,EAAd,EAAkBX,SAAS,CAAC,aAAD,CAA3B,EAA4C;AAAEa,QAAAA,QAAQ,EAAE;AAAZ,OAA5C,CAAzB,EAAyG,KAAK,CAA9G,CAAP;AACH;;AACD,WAAOxB,aAAa,CAACoB,GAAd,CAAkB,KAAlB,EAAyBzB,MAAM,CAAC2B,MAAP,CAAc,EAAd,EAAkBX,SAAS,CAAC,aAAD,CAA3B,EAA4C;AAAEa,MAAAA,QAAQ,EAAE;AAAZ,KAA5C,CAAzB,EAAkG,KAAK,CAAvG,CAAP;AACH,GARD;;AASA,QAAMC,KAAK,GAAGN,UAAU,EAAxB;AACA,SAAOnB,aAAa,CAACoB,GAAd,CAAkB,KAAlB,EAAyBzB,MAAM,CAAC2B,MAAP,CAAc,EAAd,EAAkBX,SAAS,CAAC,kBAAD,EAAqBD,SAArB,CAA3B,EAA4D;AAAEc,IAAAA,QAAQ,EAAEC;AAAZ,GAA5D,CAAzB,EAA2G,KAAK,CAAhH,CAAP;AACH,CAdD;;AAeA5B,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MediaFull = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nconst NFTDataContext_1 = require(\"../context/NFTDataContext\");\nconst MediaObject_1 = require(\"../components/MediaObject\");\nconst useMediaContext_1 = require(\"../context/useMediaContext\");\nconst getContentDataOptions_1 = require(\"../utils/getContentDataOptions\");\nconst MediaFull = ({ a11yIdPrefix, getContentData = getContentDataOptions_1.defaultGetContentData, className, }) => {\n    const { getStyles } = useMediaContext_1.useMediaContext();\n    const { nft: { data }, metadata: { metadata, error }, } = react_1.useContext(NFTDataContext_1.NFTDataContext);\n    const getContent = () => {\n        if (metadata && data) {\n            return (jsx_runtime_1.jsx(MediaObject_1.MediaObject, Object.assign({ isFullPage: true, a11yIdPrefix: a11yIdPrefix }, getContentData(data, metadata)), void 0));\n        }\n        if (error) {\n            return jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"mediaLoader\"), { children: \"error fetching...\" }), void 0);\n        }\n        return jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"mediaLoader\"), { children: \"loading...\" }), void 0);\n    };\n    const media = getContent();\n    return jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"fullMediaWrapper\", className), { children: media }), void 0);\n};\nexports.MediaFull = MediaFull;\n"]},"metadata":{},"sourceType":"script"}