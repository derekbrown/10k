{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GET_MEDIAS_QUERY = exports.GET_AUCTION_BY_MEDIA = exports.GET_ALL_AUCTIONS = exports.GET_AUCTION_BY_CURATOR = void 0;\n\nconst graphql_request_1 = require(\"graphql-request\");\n\nconst MEDIA_PARTIALS = graphql_request_1.gql`\n  fragment AskPrice on Ask {\n    id\n    currency {\n      ...CurrencyShort\n    }\n    amount\n    createdAtTimestamp\n  }\n\n  fragment NFTMedia on Media {\n    id\n    creatorBidShare\n    ownerBidShare\n    owner {\n      id\n    }\n    creator {\n      id\n    }\n    currentAsk {\n      ...AskPrice\n    }\n    createdAtTimestamp\n    metadataURI\n    metadataHash\n    contentURI\n    contentHash\n  }\n`;\nconst AUCTION_PARTIALS = graphql_request_1.gql`\n  fragment CurrencyShort on Currency {\n    id\n    name\n    symbol\n    decimals\n  }\n\n  fragment PreviousReserveBid on InactiveReserveAuctionBid {\n    id\n    bidder {\n      id\n    }\n    transactionHash\n    createdAtTimestamp\n    amount\n    bidType\n    bidInactivatedAtTimestamp\n    bidInactivatedAtBlockNumber\n  }\n\n  fragment CurrentReserveBid on ReserveAuctionBid {\n    bidType\n    amount\n    transactionHash\n    createdAtTimestamp\n    bidder {\n      id\n    }\n  }\n\n  fragment ReserveAuctionPartial on ReserveAuction {\n    id\n    tokenId\n    tokenContract\n    transactionHash\n    status\n    approved\n    reservePrice\n    firstBidTime\n    token\n    createdAtTimestamp\n    approvedTimestamp\n    curator {\n      id\n    }\n    curatorFeePercentage\n    tokenOwner {\n      id\n    }\n    auctionCurrency {\n      ...CurrencyShort\n    }\n    currentBid {\n      ...CurrentReserveBid\n    }\n    previousBids {\n      ...PreviousReserveBid\n    }\n    duration\n    expectedEndTimestamp\n    finalizedAtTimestamp\n  }\n`;\nexports.GET_AUCTION_BY_CURATOR = graphql_request_1.gql`\n  ${AUCTION_PARTIALS}\n  ${MEDIA_PARTIALS}\n\n  fragment ReserveAuctionPartialWithMedia on ReserveAuction {\n    ...ReserveAuctionPartial\n    media {\n      ...NFTMedia\n    }\n  }\n\n  query getAuctionsByCurator(\n    $curators: [String!]\n    $approved: [Boolean!]\n    $first: Int\n    $skip: Int\n  ) {\n    reserveAuctions(\n      where: { curator_in: $curators, approved_in: $approved }\n      first: $first\n      skip: $skip\n      orderBy: createdAtTimestamp\n      orderDirection: desc\n    ) {\n      ...ReserveAuctionPartialWithMedia\n    }\n  }\n`;\nexports.GET_ALL_AUCTIONS = graphql_request_1.gql`\n  ${AUCTION_PARTIALS}\n\n  query getAllAuctions($approved: [Boolean!], $first: Int, $skip: Int) {\n    reserveAuctions(where: { approved_in: $approved }, first: $first, skip: $skip) {\n      ...ReserveAuctionPartial\n    }\n  }\n`;\nexports.GET_AUCTION_BY_MEDIA = graphql_request_1.gql`\n  ${AUCTION_PARTIALS}\n\n  query getAuctionByMedia($tokens: [String!]) {\n    reserveAuctions(\n      first: 300\n      where: { token_in: $tokens }\n      orderBy: createdAtTimestamp\n      orderDirection: desc\n    ) {\n      ...ReserveAuctionPartial\n    }\n  }\n`;\nexports.GET_MEDIAS_QUERY = graphql_request_1.gql`\n  ${AUCTION_PARTIALS}\n  ${MEDIA_PARTIALS}\n\n  fragment BidDataPartial on Bid {\n    id\n    bidder {\n      id\n    }\n    createdAtTimestamp\n    transactionHash\n    amount\n    currency {\n      ...CurrencyShort\n    }\n  }\n\n  fragment TransferPartial on Transfer {\n    id\n    transactionHash\n    from {\n      id\n    }\n    to {\n      id\n    }\n    createdAtTimestamp\n    createdAtBlockNumber\n  }\n\n  fragment NFTMediaFullData on Media {\n    ...NFTMedia\n    currentBids {\n      ...BidDataPartial\n    }\n    transfers {\n      ...TransferPartial\n    }\n    reserveAuctions(orderBy: createdAtTimestamp, orderDirection: desc, first: 1) {\n      ...ReserveAuctionPartial\n    }\n  }\n\n  query getMediaAndAuctions(\n    $id_ids: [ID!]\n    $creator_ids: [String!]\n    $owner_ids: [String!]\n  ) {\n    id: medias(\n      where: { id_in: $id_ids }\n      first: 500\n    ) {\n      ...NFTMediaFullData\n    }\n    creator: medias(\n      where: { creator_in: $creator_ids }\n      first: 500\n    ) {\n      ...NFTMediaFullData\n    }\n    owner: medias(\n      where: { owner_in: $owner_ids }\n      first: 500\n    ) {\n      ...NFTMediaFullData\n    }\n  }\n`;","map":{"version":3,"sources":["/Users/derekbrown/workspace/10kdigits/node_modules/@zoralabs/nft-hooks/dist/graph-queries/zora-graph.js"],"names":["Object","defineProperty","exports","value","GET_MEDIAS_QUERY","GET_AUCTION_BY_MEDIA","GET_ALL_AUCTIONS","GET_AUCTION_BY_CURATOR","graphql_request_1","require","MEDIA_PARTIALS","gql","AUCTION_PARTIALS"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,gBAAR,GAA2BF,OAAO,CAACG,oBAAR,GAA+BH,OAAO,CAACI,gBAAR,GAA2BJ,OAAO,CAACK,sBAAR,GAAiC,KAAK,CAA3H;;AACA,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,iBAAD,CAAjC;;AACA,MAAMC,cAAc,GAAGF,iBAAiB,CAACG,GAAK;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA7BA;AA8BA,MAAMC,gBAAgB,GAAGJ,iBAAiB,CAACG,GAAK;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA/DA;AAgEAT,OAAO,CAACK,sBAAR,GAAiCC,iBAAiB,CAACG,GAAK;AACxD,IAAIC,gBAAiB;AACrB,IAAIF,cAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CA3BA;AA4BAR,OAAO,CAACI,gBAAR,GAA2BE,iBAAiB,CAACG,GAAK;AAClD,IAAIC,gBAAiB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AASAV,OAAO,CAACG,oBAAR,GAA+BG,iBAAiB,CAACG,GAAK;AACtD,IAAIC,gBAAiB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAbA;AAcAV,OAAO,CAACE,gBAAR,GAA2BI,iBAAiB,CAACG,GAAK;AAClD,IAAIC,gBAAiB;AACrB,IAAIF,cAAe;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnEA","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.GET_MEDIAS_QUERY = exports.GET_AUCTION_BY_MEDIA = exports.GET_ALL_AUCTIONS = exports.GET_AUCTION_BY_CURATOR = void 0;\nconst graphql_request_1 = require(\"graphql-request\");\nconst MEDIA_PARTIALS = graphql_request_1.gql `\n  fragment AskPrice on Ask {\n    id\n    currency {\n      ...CurrencyShort\n    }\n    amount\n    createdAtTimestamp\n  }\n\n  fragment NFTMedia on Media {\n    id\n    creatorBidShare\n    ownerBidShare\n    owner {\n      id\n    }\n    creator {\n      id\n    }\n    currentAsk {\n      ...AskPrice\n    }\n    createdAtTimestamp\n    metadataURI\n    metadataHash\n    contentURI\n    contentHash\n  }\n`;\nconst AUCTION_PARTIALS = graphql_request_1.gql `\n  fragment CurrencyShort on Currency {\n    id\n    name\n    symbol\n    decimals\n  }\n\n  fragment PreviousReserveBid on InactiveReserveAuctionBid {\n    id\n    bidder {\n      id\n    }\n    transactionHash\n    createdAtTimestamp\n    amount\n    bidType\n    bidInactivatedAtTimestamp\n    bidInactivatedAtBlockNumber\n  }\n\n  fragment CurrentReserveBid on ReserveAuctionBid {\n    bidType\n    amount\n    transactionHash\n    createdAtTimestamp\n    bidder {\n      id\n    }\n  }\n\n  fragment ReserveAuctionPartial on ReserveAuction {\n    id\n    tokenId\n    tokenContract\n    transactionHash\n    status\n    approved\n    reservePrice\n    firstBidTime\n    token\n    createdAtTimestamp\n    approvedTimestamp\n    curator {\n      id\n    }\n    curatorFeePercentage\n    tokenOwner {\n      id\n    }\n    auctionCurrency {\n      ...CurrencyShort\n    }\n    currentBid {\n      ...CurrentReserveBid\n    }\n    previousBids {\n      ...PreviousReserveBid\n    }\n    duration\n    expectedEndTimestamp\n    finalizedAtTimestamp\n  }\n`;\nexports.GET_AUCTION_BY_CURATOR = graphql_request_1.gql `\n  ${AUCTION_PARTIALS}\n  ${MEDIA_PARTIALS}\n\n  fragment ReserveAuctionPartialWithMedia on ReserveAuction {\n    ...ReserveAuctionPartial\n    media {\n      ...NFTMedia\n    }\n  }\n\n  query getAuctionsByCurator(\n    $curators: [String!]\n    $approved: [Boolean!]\n    $first: Int\n    $skip: Int\n  ) {\n    reserveAuctions(\n      where: { curator_in: $curators, approved_in: $approved }\n      first: $first\n      skip: $skip\n      orderBy: createdAtTimestamp\n      orderDirection: desc\n    ) {\n      ...ReserveAuctionPartialWithMedia\n    }\n  }\n`;\nexports.GET_ALL_AUCTIONS = graphql_request_1.gql `\n  ${AUCTION_PARTIALS}\n\n  query getAllAuctions($approved: [Boolean!], $first: Int, $skip: Int) {\n    reserveAuctions(where: { approved_in: $approved }, first: $first, skip: $skip) {\n      ...ReserveAuctionPartial\n    }\n  }\n`;\nexports.GET_AUCTION_BY_MEDIA = graphql_request_1.gql `\n  ${AUCTION_PARTIALS}\n\n  query getAuctionByMedia($tokens: [String!]) {\n    reserveAuctions(\n      first: 300\n      where: { token_in: $tokens }\n      orderBy: createdAtTimestamp\n      orderDirection: desc\n    ) {\n      ...ReserveAuctionPartial\n    }\n  }\n`;\nexports.GET_MEDIAS_QUERY = graphql_request_1.gql `\n  ${AUCTION_PARTIALS}\n  ${MEDIA_PARTIALS}\n\n  fragment BidDataPartial on Bid {\n    id\n    bidder {\n      id\n    }\n    createdAtTimestamp\n    transactionHash\n    amount\n    currency {\n      ...CurrencyShort\n    }\n  }\n\n  fragment TransferPartial on Transfer {\n    id\n    transactionHash\n    from {\n      id\n    }\n    to {\n      id\n    }\n    createdAtTimestamp\n    createdAtBlockNumber\n  }\n\n  fragment NFTMediaFullData on Media {\n    ...NFTMedia\n    currentBids {\n      ...BidDataPartial\n    }\n    transfers {\n      ...TransferPartial\n    }\n    reserveAuctions(orderBy: createdAtTimestamp, orderDirection: desc, first: 1) {\n      ...ReserveAuctionPartial\n    }\n  }\n\n  query getMediaAndAuctions(\n    $id_ids: [ID!]\n    $creator_ids: [String!]\n    $owner_ids: [String!]\n  ) {\n    id: medias(\n      where: { id_in: $id_ids }\n      first: 500\n    ) {\n      ...NFTMediaFullData\n    }\n    creator: medias(\n      where: { creator_in: $creator_ids }\n      first: 500\n    ) {\n      ...NFTMediaFullData\n    }\n    owner: medias(\n      where: { owner_in: $owner_ids }\n      first: 500\n    ) {\n      ...NFTMediaFullData\n    }\n  }\n`;\n"]},"metadata":{},"sourceType":"script"}