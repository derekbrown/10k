{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CountdownDisplay = exports.DurationDisplay = exports.splitDurationSegments = exports.TimeDisplayMap = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nfunction getNumber(time) {\n  if (typeof time === \"string\") {\n    return parseInt(time, 10);\n  }\n\n  return time;\n}\n\nexports.TimeDisplayMap = {\n  d: \"day\",\n  h: \"hour\",\n  m: \"minute\",\n  s: \"second\"\n};\n\nconst splitDurationSegments = difference => ({\n  d: Math.floor(difference / (3600 * 24)),\n  h: Math.floor(difference / 3600) % 24,\n  m: Math.floor(difference / 60 % 60),\n  s: Math.floor(difference % 60)\n});\n\nexports.splitDurationSegments = splitDurationSegments;\n\nconst getTimeLeft = (to, from) => {\n  if (from === undefined) {\n    return null;\n  }\n\n  let difference = to - from;\n\n  if (difference < 0) {\n    difference = 0;\n  }\n\n  return exports.splitDurationSegments(difference);\n};\n\nconst DurationDisplay = _ref => {\n  let {\n    duration\n  } = _ref;\n\n  const renderSegmentText = (segmentName, segmentValue) => {\n    if (segmentValue === 0) {\n      return \"\";\n    }\n\n    if (segmentValue === 1) {\n      return `${segmentValue} ${exports.TimeDisplayMap[segmentName]}`;\n    }\n\n    return `${segmentValue} ${exports.TimeDisplayMap[segmentName]}s`;\n  };\n\n  const durationSegments = exports.splitDurationSegments(duration);\n  const singleSegment = Object.values(durationSegments).map(segment => segment === 0).reduce((last, now) => last + (now ? 0 : 1), 0);\n\n  if (singleSegment <= 1) {\n    return jsx_runtime_1.jsx(react_1.Fragment, {\n      children: Object.keys(durationSegments).map(segment => // @ts-ignore: ignoring due to key type erasure with string\n      renderSegmentText(segment, durationSegments[segment])).join(\"\")\n    }, void 0);\n  }\n\n  return jsx_runtime_1.jsx(exports.CountdownDisplay, {\n    from: 0,\n    to: duration\n  }, void 0);\n};\n\nexports.DurationDisplay = DurationDisplay;\n\nconst CountdownDisplay = props => {\n  const [timeLeft, setTimeLeft] = react_1.useState(getTimeLeft(getNumber(props.to), getNumber(props.from === undefined ? new Date().getTime() / 1000 : props.from)));\n  const updateTimeLeft = react_1.useCallback(() => {\n    setTimeLeft(getTimeLeft(getNumber(props.to), getNumber(props.from === undefined ? new Date().getTime() / 1000 : props.from)));\n  }, [props.to, props.from]);\n  react_1.useEffect(() => {\n    const checkTimeout = setInterval(updateTimeLeft, 1000);\n    return () => {\n      clearInterval(checkTimeout);\n    };\n  }, []);\n\n  if (!timeLeft) {\n    return jsx_runtime_1.jsx(react_1.Fragment, {}, void 0);\n  }\n\n  const timeString = [[timeLeft.d, \"d\"], [timeLeft.h, \"h\"], [timeLeft.m, \"m\"], [timeLeft.s, \"s\"]].filter(n => n !== null).reduce((lastString, _ref2) => {\n    let [number, postfix] = _ref2;\n\n    if (!lastString.length && number === 0) {\n      return \"\";\n    }\n\n    return `${lastString} ${number}${postfix}`;\n  }, \"\");\n  return jsx_runtime_1.jsx(react_1.Fragment, {\n    children: timeString || \"0s\"\n  }, void 0);\n};\n\nexports.CountdownDisplay = CountdownDisplay;","map":{"version":3,"sources":["/Users/derekbrown/workspace/10kdigits/node_modules/@zoralabs/nft-components/dist/components/CountdownDisplay.js"],"names":["Object","defineProperty","exports","value","CountdownDisplay","DurationDisplay","splitDurationSegments","TimeDisplayMap","jsx_runtime_1","require","react_1","getNumber","time","parseInt","d","h","m","s","difference","Math","floor","getTimeLeft","to","from","undefined","duration","renderSegmentText","segmentName","segmentValue","durationSegments","singleSegment","values","map","segment","reduce","last","now","jsx","Fragment","children","keys","join","props","timeLeft","setTimeLeft","useState","Date","getTime","updateTimeLeft","useCallback","useEffect","checkTimeout","setInterval","clearInterval","timeString","filter","n","lastString","number","postfix","length"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CountdownDisplay = exports.DurationDisplay = exports.splitDurationSegments = exports.TimeDisplayMap = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nfunction getNumber(time) {\n    if (typeof time === \"string\") {\n        return parseInt(time, 10);\n    }\n    return time;\n}\nexports.TimeDisplayMap = {\n    d: \"day\",\n    h: \"hour\",\n    m: \"minute\",\n    s: \"second\",\n};\nconst splitDurationSegments = (difference) => ({\n    d: Math.floor(difference / (3600 * 24)),\n    h: Math.floor(difference / 3600) % 24,\n    m: Math.floor((difference / 60) % 60),\n    s: Math.floor(difference % 60),\n});\nexports.splitDurationSegments = splitDurationSegments;\nconst getTimeLeft = (to, from) => {\n    if (from === undefined) {\n        return null;\n    }\n    let difference = to - from;\n    if (difference < 0) {\n        difference = 0;\n    }\n    return exports.splitDurationSegments(difference);\n};\nconst DurationDisplay = ({ duration }) => {\n    const renderSegmentText = (segmentName, segmentValue) => {\n        if (segmentValue === 0) {\n            return \"\";\n        }\n        if (segmentValue === 1) {\n            return `${segmentValue} ${exports.TimeDisplayMap[segmentName]}`;\n        }\n        return `${segmentValue} ${exports.TimeDisplayMap[segmentName]}s`;\n    };\n    const durationSegments = exports.splitDurationSegments(duration);\n    const singleSegment = Object.values(durationSegments)\n        .map((segment) => segment === 0)\n        .reduce((last, now) => last + (now ? 0 : 1), 0);\n    if (singleSegment <= 1) {\n        return (jsx_runtime_1.jsx(react_1.Fragment, { children: Object.keys(durationSegments)\n                .map((segment) => \n            // @ts-ignore: ignoring due to key type erasure with string\n            renderSegmentText(segment, durationSegments[segment]))\n                .join(\"\") }, void 0));\n    }\n    return jsx_runtime_1.jsx(exports.CountdownDisplay, { from: 0, to: duration }, void 0);\n};\nexports.DurationDisplay = DurationDisplay;\nconst CountdownDisplay = (props) => {\n    const [timeLeft, setTimeLeft] = react_1.useState(getTimeLeft(getNumber(props.to), getNumber(props.from === undefined ? new Date().getTime() / 1000 : props.from)));\n    const updateTimeLeft = react_1.useCallback(() => {\n        setTimeLeft(getTimeLeft(getNumber(props.to), getNumber(props.from === undefined ? new Date().getTime() / 1000 : props.from)));\n    }, [props.to, props.from]);\n    react_1.useEffect(() => {\n        const checkTimeout = setInterval(updateTimeLeft, 1000);\n        return () => {\n            clearInterval(checkTimeout);\n        };\n    }, []);\n    if (!timeLeft) {\n        return jsx_runtime_1.jsx(react_1.Fragment, {}, void 0);\n    }\n    const timeString = [\n        [timeLeft.d, \"d\"],\n        [timeLeft.h, \"h\"],\n        [timeLeft.m, \"m\"],\n        [timeLeft.s, \"s\"],\n    ]\n        .filter((n) => n !== null)\n        .reduce((lastString, [number, postfix]) => {\n        if (!lastString.length && number === 0) {\n            return \"\";\n        }\n        return `${lastString} ${number}${postfix}`;\n    }, \"\");\n    return jsx_runtime_1.jsx(react_1.Fragment, { children: timeString || \"0s\" }, void 0);\n};\nexports.CountdownDisplay = CountdownDisplay;\n"]},"metadata":{},"sourceType":"script"}