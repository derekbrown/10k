{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BidHistory = void 0;\n\nconst react_1 = require(\"react\");\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_2 = require(\"react\");\n\nconst PricingString_1 = require(\"../utils/PricingString\");\n\nconst AddressView_1 = require(\"../components/AddressView\");\n\nconst NFTDataContext_1 = require(\"../context/NFTDataContext\");\n\nconst useMediaContext_1 = require(\"../context/useMediaContext\");\n\nconst InfoContainer_1 = require(\"./InfoContainer\");\n\nconst dateFromTimestamp = timestamp => new Date(parseInt(timestamp, 10) * 1000);\n\nconst formatDate = timestamp => dateFromTimestamp(timestamp).toLocaleString(\"en-US\", {\n  month: \"long\",\n  day: \"numeric\",\n  hour: \"2-digit\",\n  minute: \"2-digit\",\n  hour12: true\n});\n\nconst BidHistory = _ref => {\n  let {\n    showPerpetual = true,\n    className\n  } = _ref;\n  const {\n    nft\n  } = react_2.useContext(NFTDataContext_1.NFTDataContext);\n  const {\n    getString,\n    getStyles,\n    style\n  } = useMediaContext_1.useMediaContext();\n\n  const getPastBids = () => {\n    var _a, _b, _c, _d, _e, _f, _g, _h;\n\n    const {\n      data\n    } = nft;\n\n    if (!data || !data.nft) {\n      return jsx_runtime_1.jsx(react_2.Fragment, {}, void 0);\n    }\n\n    const currentBid = ((_a = data.pricing.reserve) === null || _a === void 0 ? void 0 : _a.currentBid) ? [(_b = data.pricing.reserve) === null || _b === void 0 ? void 0 : _b.currentBid] : [];\n    const eventsList = [...(showPerpetual ? data.pricing.perpetual.bids : []), ...(((_c = data.pricing.reserve) === null || _c === void 0 ? void 0 : _c.previousBids) || []), ...currentBid].map(bid => ({\n      activityDescription: getString(\"BID_HISTORY_BID\"),\n      actor: bid.bidder.id,\n      pricing: jsx_runtime_1.jsx(PricingString_1.PricingString, {\n        pricing: bid.pricing,\n        showUSD: false\n      }, void 0),\n      createdAt: bid.createdAtTimestamp,\n      // hint for type inference\n      transactionHash: bid.transactionHash\n    }));\n\n    if (((_d = data.pricing.reserve) === null || _d === void 0 ? void 0 : _d.createdAtTimestamp) && ( // Only show approved auction listings\n    (_e = data.pricing.reserve) === null || _e === void 0 ? void 0 : _e.approvedTimestamp)) {\n      eventsList.push({\n        activityDescription: getString(\"BID_HISTORY_LISTED\"),\n        pricing: jsx_runtime_1.jsx(react_2.Fragment, {}, void 0),\n        actor: data.pricing.reserve.tokenOwner.id,\n        // TODO(iain): Update to the timestamp when approved\n        createdAt: data.pricing.reserve.approvedTimestamp,\n        transactionHash: data.pricing.reserve.transactionHash\n      });\n    }\n\n    if (data.pricing && data.pricing.reserve && data.pricing.reserve.current.likelyHasEnded && (data.pricing.reserve.status === \"Active\" || data.pricing.reserve.status === \"Finished\")) {\n      const highestBid = data.pricing.reserve.currentBid || data.pricing.reserve.previousBids[0];\n      eventsList.push({\n        activityDescription: getString(\"BID_HISTORY_WON_AUCTION\"),\n        pricing: jsx_runtime_1.jsx(react_2.Fragment, {}, void 0),\n        actor: highestBid.bidder.id,\n        createdAt: data.pricing.reserve.expectedEndTimestamp,\n        transactionHash: ((_f = data.pricing.reserve.currentBid) === null || _f === void 0 ? void 0 : _f.transactionHash) || null\n      });\n    }\n\n    if (\"zoraNFT\" in data && data.zoraNFT && data.zoraNFT.createdAtTimestamp && !(\"zoraIndexerResponse\" in data)) {\n      eventsList.push({\n        activityDescription: getString(\"BID_HISTORY_MINTED\"),\n        pricing: jsx_runtime_1.jsx(react_2.Fragment, {}, void 0),\n        actor: data.nft.creator || \"\",\n        createdAt: data.zoraNFT.createdAtTimestamp,\n        transactionHash: null\n      });\n    }\n\n    if (\"zoraIndexerResponse\" in data && data.zoraIndexerResponse.minter) {\n      const unixDate = new Date(((_g = data.zoraIndexerResponse.mintTransferEvent) === null || _g === void 0 ? void 0 : _g.blockTimestamp) + \"Z\").getTime() / 1000;\n      eventsList.push({\n        activityDescription: getString(\"BID_HISTORY_MINTED\"),\n        pricing: jsx_runtime_1.jsx(react_2.Fragment, {}, void 0),\n        actor: data.zoraIndexerResponse.minter,\n        createdAt: unixDate.toString(),\n        transactionHash: ((_h = data.zoraIndexerResponse.mintTransferEvent) === null || _h === void 0 ? void 0 : _h.transactionHash) || null\n      });\n    }\n\n    if (\"openseaInfo\" in data && data.openseaInfo.creator) {\n      eventsList.push({\n        activityDescription: getString(\"BID_HISTORY_MINTED\"),\n        pricing: jsx_runtime_1.jsx(react_2.Fragment, {}, void 0),\n        actor: data.openseaInfo.creator.address,\n        createdAt: null,\n        transactionHash: null\n      });\n    }\n\n    return eventsList.sort((bidA, bidB) => bidA.createdAt > bidB.createdAt ? -1 : 1).map(bidItem => react_1.createElement(\"li\", Object.assign({}, getStyles(\"fullPageHistoryItem\"), {\n      key: `${bidItem.actor}-${bidItem.createdAt}`\n    }), jsx_runtime_1.jsxs(\"div\", Object.assign({}, getStyles(\"fullPageHistoryItemDescription\"), {\n      children: [jsx_runtime_1.jsxs(\"div\", Object.assign({}, getStyles(\"fullPageHistoryItemDescriptionCopy\"), {\n        children: [jsx_runtime_1.jsx(AddressView_1.AddressView, {\n          address: bidItem.actor\n        }, void 0), \"\\u00A0\", jsx_runtime_1.jsxs(\"span\", Object.assign({}, getStyles(\"pricingAmount\"), {\n          children: [bidItem.activityDescription, \" \", bidItem.pricing]\n        }), void 0)]\n      }), void 0), bidItem.transactionHash && style.theme.showTxnLinks && jsx_runtime_1.jsx(\"a\", Object.assign({}, getStyles(\"fullPageHistoryTxnLink\"), {\n        href: `https://etherscan.io/tx/${bidItem.transactionHash}`,\n        target: \"_blank\",\n        rel: \"noreferrer\"\n      }, {\n        children: getString(\"BID_HISTORY_VIEW_TRANSACTION\")\n      }), void 0)]\n    }), void 0), bidItem.createdAt && jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"fullPageHistoryItemMeta\"), {\n      children: jsx_runtime_1.jsx(\"time\", Object.assign({\n        dateTime: dateFromTimestamp(bidItem.createdAt).toISOString()\n      }, getStyles(\"fullPageHistoryItemDatestamp\"), {\n        children: formatDate(bidItem.createdAt)\n      }), void 0)\n    }), void 0)));\n  };\n\n  return jsx_runtime_1.jsx(InfoContainer_1.InfoContainer, Object.assign({\n    titleString: \"NFT_HISTORY\",\n    className: className\n  }, {\n    children: jsx_runtime_1.jsx(\"ol\", Object.assign({}, getStyles(\"fullPageHistoryList\"), {\n      children: getPastBids()\n    }), void 0)\n  }), void 0);\n};\n\nexports.BidHistory = BidHistory;","map":{"version":3,"sources":["/Users/derekbrown/workspace/10kdigits/node_modules/@zoralabs/nft-components/dist/nft-full/BidHistory.js"],"names":["Object","defineProperty","exports","value","BidHistory","react_1","require","jsx_runtime_1","react_2","PricingString_1","AddressView_1","NFTDataContext_1","useMediaContext_1","InfoContainer_1","dateFromTimestamp","timestamp","Date","parseInt","formatDate","toLocaleString","month","day","hour","minute","hour12","showPerpetual","className","nft","useContext","NFTDataContext","getString","getStyles","style","useMediaContext","getPastBids","_a","_b","_c","_d","_e","_f","_g","_h","data","jsx","Fragment","currentBid","pricing","reserve","eventsList","perpetual","bids","previousBids","map","bid","activityDescription","actor","bidder","id","PricingString","showUSD","createdAt","createdAtTimestamp","transactionHash","approvedTimestamp","push","tokenOwner","current","likelyHasEnded","status","highestBid","expectedEndTimestamp","zoraNFT","creator","zoraIndexerResponse","minter","unixDate","mintTransferEvent","blockTimestamp","getTime","toString","openseaInfo","address","sort","bidA","bidB","bidItem","createElement","assign","key","jsxs","children","AddressView","theme","showTxnLinks","href","target","rel","dateTime","toISOString","InfoContainer","titleString"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BidHistory = void 0;\nconst react_1 = require(\"react\");\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_2 = require(\"react\");\nconst PricingString_1 = require(\"../utils/PricingString\");\nconst AddressView_1 = require(\"../components/AddressView\");\nconst NFTDataContext_1 = require(\"../context/NFTDataContext\");\nconst useMediaContext_1 = require(\"../context/useMediaContext\");\nconst InfoContainer_1 = require(\"./InfoContainer\");\nconst dateFromTimestamp = (timestamp) => new Date(parseInt(timestamp, 10) * 1000);\nconst formatDate = (timestamp) => dateFromTimestamp(timestamp).toLocaleString(\"en-US\", {\n    month: \"long\",\n    day: \"numeric\",\n    hour: \"2-digit\",\n    minute: \"2-digit\",\n    hour12: true,\n});\nconst BidHistory = ({ showPerpetual = true, className, }) => {\n    const { nft } = react_2.useContext(NFTDataContext_1.NFTDataContext);\n    const { getString, getStyles, style } = useMediaContext_1.useMediaContext();\n    const getPastBids = () => {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const { data } = nft;\n        if (!data || !data.nft) {\n            return jsx_runtime_1.jsx(react_2.Fragment, {}, void 0);\n        }\n        const currentBid = ((_a = data.pricing.reserve) === null || _a === void 0 ? void 0 : _a.currentBid)\n            ? [(_b = data.pricing.reserve) === null || _b === void 0 ? void 0 : _b.currentBid]\n            : [];\n        const eventsList = [\n            ...(showPerpetual ? data.pricing.perpetual.bids : []),\n            ...(((_c = data.pricing.reserve) === null || _c === void 0 ? void 0 : _c.previousBids) || []),\n            ...currentBid,\n        ].map((bid) => ({\n            activityDescription: getString(\"BID_HISTORY_BID\"),\n            actor: bid.bidder.id,\n            pricing: jsx_runtime_1.jsx(PricingString_1.PricingString, { pricing: bid.pricing, showUSD: false }, void 0),\n            createdAt: bid.createdAtTimestamp,\n            // hint for type inference\n            transactionHash: bid.transactionHash,\n        }));\n        if (((_d = data.pricing.reserve) === null || _d === void 0 ? void 0 : _d.createdAtTimestamp) &&\n            (\n            // Only show approved auction listings\n            (_e = data.pricing.reserve) === null || _e === void 0 ? void 0 : _e.approvedTimestamp)) {\n            eventsList.push({\n                activityDescription: getString(\"BID_HISTORY_LISTED\"),\n                pricing: jsx_runtime_1.jsx(react_2.Fragment, {}, void 0),\n                actor: data.pricing.reserve.tokenOwner.id,\n                // TODO(iain): Update to the timestamp when approved\n                createdAt: data.pricing.reserve.approvedTimestamp,\n                transactionHash: data.pricing.reserve.transactionHash,\n            });\n        }\n        if (data.pricing &&\n            data.pricing.reserve &&\n            data.pricing.reserve.current.likelyHasEnded &&\n            (data.pricing.reserve.status === \"Active\" ||\n                data.pricing.reserve.status === \"Finished\")) {\n            const highestBid = data.pricing.reserve.currentBid || data.pricing.reserve.previousBids[0];\n            eventsList.push({\n                activityDescription: getString(\"BID_HISTORY_WON_AUCTION\"),\n                pricing: jsx_runtime_1.jsx(react_2.Fragment, {}, void 0),\n                actor: highestBid.bidder.id,\n                createdAt: data.pricing.reserve.expectedEndTimestamp,\n                transactionHash: ((_f = data.pricing.reserve.currentBid) === null || _f === void 0 ? void 0 : _f.transactionHash) || null,\n            });\n        }\n        if (\"zoraNFT\" in data &&\n            data.zoraNFT &&\n            data.zoraNFT.createdAtTimestamp &&\n            !(\"zoraIndexerResponse\" in data)) {\n            eventsList.push({\n                activityDescription: getString(\"BID_HISTORY_MINTED\"),\n                pricing: jsx_runtime_1.jsx(react_2.Fragment, {}, void 0),\n                actor: data.nft.creator || \"\",\n                createdAt: data.zoraNFT.createdAtTimestamp,\n                transactionHash: null,\n            });\n        }\n        if (\"zoraIndexerResponse\" in data && data.zoraIndexerResponse.minter) {\n            const unixDate = new Date(((_g = data.zoraIndexerResponse.mintTransferEvent) === null || _g === void 0 ? void 0 : _g.blockTimestamp) + \"Z\").getTime() / 1000;\n            eventsList.push({\n                activityDescription: getString(\"BID_HISTORY_MINTED\"),\n                pricing: jsx_runtime_1.jsx(react_2.Fragment, {}, void 0),\n                actor: data.zoraIndexerResponse.minter,\n                createdAt: unixDate.toString(),\n                transactionHash: ((_h = data.zoraIndexerResponse.mintTransferEvent) === null || _h === void 0 ? void 0 : _h.transactionHash) || null,\n            });\n        }\n        if (\"openseaInfo\" in data && data.openseaInfo.creator) {\n            eventsList.push({\n                activityDescription: getString(\"BID_HISTORY_MINTED\"),\n                pricing: jsx_runtime_1.jsx(react_2.Fragment, {}, void 0),\n                actor: data.openseaInfo.creator.address,\n                createdAt: null,\n                transactionHash: null,\n            });\n        }\n        return eventsList\n            .sort((bidA, bidB) => (bidA.createdAt > bidB.createdAt ? -1 : 1))\n            .map((bidItem) => (react_1.createElement(\"li\", Object.assign({}, getStyles(\"fullPageHistoryItem\"), { key: `${bidItem.actor}-${bidItem.createdAt}` }),\n            jsx_runtime_1.jsxs(\"div\", Object.assign({}, getStyles(\"fullPageHistoryItemDescription\"), { children: [jsx_runtime_1.jsxs(\"div\", Object.assign({}, getStyles(\"fullPageHistoryItemDescriptionCopy\"), { children: [jsx_runtime_1.jsx(AddressView_1.AddressView, { address: bidItem.actor }, void 0), \"\\u00A0\", jsx_runtime_1.jsxs(\"span\", Object.assign({}, getStyles(\"pricingAmount\"), { children: [bidItem.activityDescription, \" \", bidItem.pricing] }), void 0)] }), void 0),\n                    bidItem.transactionHash && style.theme.showTxnLinks && (jsx_runtime_1.jsx(\"a\", Object.assign({}, getStyles(\"fullPageHistoryTxnLink\"), { href: `https://etherscan.io/tx/${bidItem.transactionHash}`, target: \"_blank\", rel: \"noreferrer\" }, { children: getString(\"BID_HISTORY_VIEW_TRANSACTION\") }), void 0))] }), void 0),\n            bidItem.createdAt && (jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"fullPageHistoryItemMeta\"), { children: jsx_runtime_1.jsx(\"time\", Object.assign({ dateTime: dateFromTimestamp(bidItem.createdAt).toISOString() }, getStyles(\"fullPageHistoryItemDatestamp\"), { children: formatDate(bidItem.createdAt) }), void 0) }), void 0)))));\n    };\n    return (jsx_runtime_1.jsx(InfoContainer_1.InfoContainer, Object.assign({ titleString: \"NFT_HISTORY\", className: className }, { children: jsx_runtime_1.jsx(\"ol\", Object.assign({}, getStyles(\"fullPageHistoryList\"), { children: getPastBids() }), void 0) }), void 0));\n};\nexports.BidHistory = BidHistory;\n"]},"metadata":{},"sourceType":"script"}