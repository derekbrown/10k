{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.onErrorRetry = exports.ArgumentsError = exports.NotFoundError = void 0;\n\nclass NotFoundError extends Error {}\n\nexports.NotFoundError = NotFoundError;\n\nclass ArgumentsError extends Error {}\n\nexports.ArgumentsError = ArgumentsError;\n\nconst onErrorRetry = (err, _, __, revalidate, revalidateOpts) => {\n  if (err instanceof NotFoundError) {\n    // Don't retry for 404 records\n    return;\n  }\n\n  if (err instanceof ArgumentsError) {\n    // Don't retry for invalid arguments\n    return;\n  }\n\n  if (revalidateOpts.retryCount || 5 < 4) {\n    // Retry with error other than not found\n    revalidate(revalidateOpts);\n  }\n};\n\nexports.onErrorRetry = onErrorRetry;","map":{"version":3,"sources":["/Users/derekbrown/workspace/10kdigits/node_modules/@zoralabs/nft-hooks/dist/fetcher/ErrorUtils.js"],"names":["Object","defineProperty","exports","value","onErrorRetry","ArgumentsError","NotFoundError","Error","err","_","__","revalidate","revalidateOpts","retryCount"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuBF,OAAO,CAACG,cAAR,GAAyBH,OAAO,CAACI,aAAR,GAAwB,KAAK,CAA7E;;AACA,MAAMA,aAAN,SAA4BC,KAA5B,CAAkC;;AAElCL,OAAO,CAACI,aAAR,GAAwBA,aAAxB;;AACA,MAAMD,cAAN,SAA6BE,KAA7B,CAAmC;;AAEnCL,OAAO,CAACG,cAAR,GAAyBA,cAAzB;;AACA,MAAMD,YAAY,GAAG,CAACI,GAAD,EAAMC,CAAN,EAASC,EAAT,EAAaC,UAAb,EAAyBC,cAAzB,KAA4C;AAC7D,MAAIJ,GAAG,YAAYF,aAAnB,EAAkC;AAC9B;AACA;AACH;;AACD,MAAIE,GAAG,YAAYH,cAAnB,EAAmC;AAC/B;AACA;AACH;;AACD,MAAIO,cAAc,CAACC,UAAf,IAA6B,IAAI,CAArC,EAAwC;AACpC;AACAF,IAAAA,UAAU,CAACC,cAAD,CAAV;AACH;AACJ,CAbD;;AAcAV,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.onErrorRetry = exports.ArgumentsError = exports.NotFoundError = void 0;\nclass NotFoundError extends Error {\n}\nexports.NotFoundError = NotFoundError;\nclass ArgumentsError extends Error {\n}\nexports.ArgumentsError = ArgumentsError;\nconst onErrorRetry = (err, _, __, revalidate, revalidateOpts) => {\n    if (err instanceof NotFoundError) {\n        // Don't retry for 404 records\n        return;\n    }\n    if (err instanceof ArgumentsError) {\n        // Don't retry for invalid arguments\n        return;\n    }\n    if (revalidateOpts.retryCount || 5 < 4) {\n        // Retry with error other than not found\n        revalidate(revalidateOpts);\n    }\n};\nexports.onErrorRetry = onErrorRetry;\n"]},"metadata":{},"sourceType":"script"}