{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PlaceOfferButton = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nconst media_urls_1 = require(\"../constants/media-urls\");\n\nconst useMediaContext_1 = require(\"../context/useMediaContext\");\n\nconst Button_1 = require(\"../components/Button\");\n\nconst NFTDataContext_1 = require(\"../context/NFTDataContext\");\n\nconst nft_hooks_1 = require(\"@zoralabs/nft-hooks\");\n\nconst PlaceOfferButton = _ref => {\n  let {\n    allowOffer,\n    className\n  } = _ref;\n\n  var _a;\n\n  const {\n    nft\n  } = react_1.useContext(NFTDataContext_1.NFTDataContext);\n  const {\n    getString,\n    getStyles\n  } = useMediaContext_1.useMediaContext();\n\n  if (!nft.data) {\n    return jsx_runtime_1.jsx(react_1.Fragment, {}, void 0);\n  } // Disable offer functionality if not a zora NFT or if offers are disabled\n\n\n  if ((allowOffer === false || !(\"zoraNFT\" in nft.data) || nft.data.zoraNFT === undefined) && nft.data.pricing.auctionType !== nft_hooks_1.AuctionType.RESERVE) {\n    return jsx_runtime_1.jsx(react_1.Fragment, {}, void 0);\n  }\n\n  function getBidURLParts() {\n    const data = nft.data;\n\n    if (!data) {\n      return;\n    }\n\n    if (data.pricing.auctionType !== nft_hooks_1.AuctionType.RESERVE && data.nft.contract.knownContract !== 'zora') {\n      return;\n    }\n\n    return [media_urls_1.ZORA_SITE_URL_BASE, \"collections\", data.nft.contract.address, data.nft.tokenId, data.pricing.auctionType === nft_hooks_1.AuctionType.RESERVE ? \"auction/bid\" : \"offer\"];\n  }\n\n  const bidURL = (_a = getBidURLParts()) === null || _a === void 0 ? void 0 : _a.join(\"/\");\n\n  if (!bidURL) {\n    return jsx_runtime_1.jsx(react_1.Fragment, {}, void 0);\n  }\n\n  return jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"fullPlaceOfferButton\", className), {\n    children: jsx_runtime_1.jsx(Button_1.Button, Object.assign({\n      primary: true,\n      href: bidURL\n    }, {\n      children: getString(nft.data.pricing.auctionType === nft_hooks_1.AuctionType.RESERVE ? \"PLACE_BID\" : \"PLACE_OFFER\")\n    }), void 0)\n  }), void 0);\n};\n\nexports.PlaceOfferButton = PlaceOfferButton;","map":{"version":3,"sources":["/Users/derekbrown/workspace/10kdigits/node_modules/@zoralabs/nft-components/dist/nft-full/PlaceOfferButton.js"],"names":["Object","defineProperty","exports","value","PlaceOfferButton","jsx_runtime_1","require","react_1","media_urls_1","useMediaContext_1","Button_1","NFTDataContext_1","nft_hooks_1","allowOffer","className","_a","nft","useContext","NFTDataContext","getString","getStyles","useMediaContext","data","jsx","Fragment","zoraNFT","undefined","pricing","auctionType","AuctionType","RESERVE","getBidURLParts","contract","knownContract","ZORA_SITE_URL_BASE","address","tokenId","bidURL","join","assign","children","Button","primary","href"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PlaceOfferButton = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nconst media_urls_1 = require(\"../constants/media-urls\");\nconst useMediaContext_1 = require(\"../context/useMediaContext\");\nconst Button_1 = require(\"../components/Button\");\nconst NFTDataContext_1 = require(\"../context/NFTDataContext\");\nconst nft_hooks_1 = require(\"@zoralabs/nft-hooks\");\nconst PlaceOfferButton = ({ allowOffer, className }) => {\n    var _a;\n    const { nft } = react_1.useContext(NFTDataContext_1.NFTDataContext);\n    const { getString, getStyles } = useMediaContext_1.useMediaContext();\n    if (!nft.data) {\n        return jsx_runtime_1.jsx(react_1.Fragment, {}, void 0);\n    }\n    // Disable offer functionality if not a zora NFT or if offers are disabled\n    if ((allowOffer === false ||\n        !(\"zoraNFT\" in nft.data) ||\n        nft.data.zoraNFT === undefined) &&\n        nft.data.pricing.auctionType !== nft_hooks_1.AuctionType.RESERVE) {\n        return jsx_runtime_1.jsx(react_1.Fragment, {}, void 0);\n    }\n    function getBidURLParts() {\n        const data = nft.data;\n        if (!data) {\n            return;\n        }\n        if (data.pricing.auctionType !== nft_hooks_1.AuctionType.RESERVE && data.nft.contract.knownContract !== 'zora') {\n            return;\n        }\n        return [\n            media_urls_1.ZORA_SITE_URL_BASE,\n            \"collections\",\n            data.nft.contract.address,\n            data.nft.tokenId,\n            data.pricing.auctionType === nft_hooks_1.AuctionType.RESERVE ? \"auction/bid\" : \"offer\",\n        ];\n    }\n    const bidURL = (_a = getBidURLParts()) === null || _a === void 0 ? void 0 : _a.join(\"/\");\n    if (!bidURL) {\n        return jsx_runtime_1.jsx(react_1.Fragment, {}, void 0);\n    }\n    return (jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"fullPlaceOfferButton\", className), { children: jsx_runtime_1.jsx(Button_1.Button, Object.assign({ primary: true, href: bidURL }, { children: getString(nft.data.pricing.auctionType === nft_hooks_1.AuctionType.RESERVE\n                ? \"PLACE_BID\"\n                : \"PLACE_OFFER\") }), void 0) }), void 0));\n};\nexports.PlaceOfferButton = PlaceOfferButton;\n"]},"metadata":{},"sourceType":"script"}