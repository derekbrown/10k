{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Audio = exports.AudioRenderer = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nconst useSyncRef_1 = require(\"../utils/useSyncRef\");\n\nconst MediaLoader_1 = require(\"./MediaLoader\");\n\nconst RendererConfig_1 = require(\"./RendererConfig\");\n\nconst FakeWaveformCanvas = _ref => {\n  let {\n    audioRef,\n    uri,\n    audioColors\n  } = _ref;\n  const canvasRef = react_1.useRef(null);\n  const [width, setWidth] = react_1.useState();\n  const updateWidth = react_1.useCallback(() => {\n    var _a, _b, _c;\n\n    const newWidth = (_c = (_b = (_a = canvasRef.current) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect()) === null || _c === void 0 ? void 0 : _c.width;\n\n    if (newWidth && newWidth !== width) {\n      setWidth(newWidth);\n    }\n  }, [canvasRef.current]);\n  react_1.useEffect(() => {\n    updateWidth();\n    window.addEventListener(\"resize\", updateWidth);\n    return () => {\n      window.removeEventListener(\"resize\", updateWidth);\n    };\n  }, [updateWidth]);\n  const uriEntropy = react_1.useMemo(() => uri.split(\"\").reduce((last, char) => last ^ last + char.charCodeAt(0), 0), [uri]);\n  react_1.useEffect(() => {\n    updateCanvasLines();\n    const updateInterval = setInterval(updateCanvasLines, 1000);\n    return () => clearInterval(updateInterval);\n  }, [width]);\n  const seekAudio = react_1.useCallback(evt => {\n    if (audioRef.current && canvasRef.current && width) {\n      const position = (evt.clientX - canvasRef.current.getBoundingClientRect().left) / width;\n      audioRef.current.currentTime = position * audioRef.current.duration;\n      audioRef.current.play();\n      updateCanvasLines();\n    }\n  }, [audioRef.current, width]);\n  const height = 200;\n  const updateCanvasLines = react_1.useCallback(() => {\n    if (canvasRef.current && width && audioRef.current) {\n      const context = canvasRef.current.getContext(\"2d\");\n\n      if (!context) {\n        return;\n      }\n\n      context.clearRect(0, 0, width, height);\n\n      for (let i = 0; i < width; i += 5) {\n        const sinRnd = Math.sin(i + uriEntropy) * 10000;\n        const lineHeight = Math.floor(Math.min(Math.sin(i / width * 0.2) + 2 * (sinRnd - Math.floor(sinRnd)) * 40, height));\n\n        if (audioRef.current.currentTime / audioRef.current.duration > i / width) {\n          context.fillStyle = audioColors.progressColor;\n        } else {\n          context.fillStyle = audioColors.waveformColor;\n        }\n\n        context.fillRect(i, (height - lineHeight) / 2, 2, lineHeight);\n      }\n    }\n  }, [canvasRef.current, audioRef.current, width]);\n  return jsx_runtime_1.jsx(\"canvas\", {\n    ref: canvasRef,\n    height: height,\n    width: width,\n    onClick: seekAudio\n  }, void 0);\n};\n\nexports.AudioRenderer = react_1.forwardRef((_ref2, ref) => {\n  let {\n    request,\n    getStyles,\n    a11yIdPrefix,\n    theme\n  } = _ref2;\n\n  var _a, _b;\n\n  const uri = ((_a = request.media.content) === null || _a === void 0 ? void 0 : _a.uri) || ((_b = request.media.animation) === null || _b === void 0 ? void 0 : _b.uri);\n  const {\n    props,\n    loading,\n    error\n  } = MediaLoader_1.useMediaObjectProps({\n    uri,\n    request,\n    a11yIdPrefix,\n    getStyles,\n    preferredIPFSGateway: theme.preferredIPFSGateway\n  });\n  const audioRef = react_1.useRef(null);\n  useSyncRef_1.useSyncRef(audioRef, ref);\n  const [playing, setPlaying] = react_1.useState(false);\n  const wrapper = react_1.useRef();\n  const togglePlay = react_1.useCallback(evt => {\n    evt.preventDefault();\n    evt.stopPropagation();\n\n    if (audioRef.current) {\n      if (playing) {\n        audioRef.current.pause();\n      } else {\n        audioRef.current.play();\n      }\n    }\n  }, [audioRef.current, playing]);\n  react_1.useEffect(() => {\n    if (!audioRef.current) {\n      return;\n    }\n\n    if (playing) {\n      audioRef.current.play();\n    } else {\n      audioRef.current.pause();\n    }\n  }, [audioRef.current, playing]);\n  const playingText = playing ? \"Pause\" : \"Play\";\n  return jsx_runtime_1.jsx(MediaLoader_1.MediaLoader, Object.assign({\n    getStyles: getStyles,\n    loading: loading,\n    error: error\n  }, {\n    children: jsx_runtime_1.jsxs(\"div\", Object.assign({\n      ref: wrapper\n    }, getStyles(\"mediaAudioWrapper\"), {\n      children: [!loading && jsx_runtime_1.jsxs(react_1.Fragment, {\n        children: [jsx_runtime_1.jsx(\"button\", Object.assign({\n          \"aria-live\": \"polite\",\n          \"aria-pressed\": playing ? true : false,\n          onClick: togglePlay,\n          title: playingText\n        }, getStyles(\"mediaPlayButton\", undefined, {\n          playing\n        }), {\n          children: playingText\n        }), void 0), jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"mediaAudioWaveform\"), {\n          children: jsx_runtime_1.jsx(FakeWaveformCanvas, {\n            uri: uri || \"\",\n            audioRef: audioRef,\n            audioColors: theme.audioColors\n          }, void 0)\n        }), void 0)]\n      }, void 0), jsx_runtime_1.jsx(\"audio\", Object.assign({\n        loop: true,\n        ref: audioRef,\n        preload: \"auto\",\n        playsInline: true,\n        onPlay: () => setPlaying(true),\n        onPause: () => setPlaying(false)\n      }, props, {\n        onLoadedData: props.onLoad,\n        onCanPlayThrough: props.onLoad,\n        onLoad: undefined\n      }), void 0)]\n    }), void 0)\n  }), void 0);\n});\nexports.Audio = {\n  getRenderingPreference(request) {\n    var _a, _b, _c, _d;\n\n    if (((_b = (_a = request.media.content) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.startsWith(\"audio\")) || ((_d = (_c = request.media.animation) === null || _c === void 0 ? void 0 : _c.type) === null || _d === void 0 ? void 0 : _d.startsWith(\"audio\"))) {\n      return request.renderingContext === \"FULL\" ? RendererConfig_1.RenderingPreference.PRIORITY : RendererConfig_1.RenderingPreference.LOW;\n    }\n\n    return RendererConfig_1.RenderingPreference.INVALID;\n  },\n\n  render: exports.AudioRenderer\n};","map":{"version":3,"sources":["/Users/derekbrown/workspace/10kdigits/node_modules/@zoralabs/nft-components/dist/content-components/Audio.js"],"names":["Object","defineProperty","exports","value","Audio","AudioRenderer","jsx_runtime_1","require","react_1","useSyncRef_1","MediaLoader_1","RendererConfig_1","FakeWaveformCanvas","audioRef","uri","audioColors","canvasRef","useRef","width","setWidth","useState","updateWidth","useCallback","_a","_b","_c","newWidth","current","parentElement","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","uriEntropy","useMemo","split","reduce","last","char","charCodeAt","updateCanvasLines","updateInterval","setInterval","clearInterval","seekAudio","evt","position","clientX","left","currentTime","duration","play","height","context","getContext","clearRect","i","sinRnd","Math","sin","lineHeight","floor","min","fillStyle","progressColor","waveformColor","fillRect","jsx","ref","onClick","forwardRef","request","getStyles","a11yIdPrefix","theme","media","content","animation","props","loading","error","useMediaObjectProps","preferredIPFSGateway","useSyncRef","playing","setPlaying","wrapper","togglePlay","preventDefault","stopPropagation","pause","playingText","MediaLoader","assign","children","jsxs","Fragment","title","undefined","loop","preload","playsInline","onPlay","onPause","onLoadedData","onLoad","onCanPlayThrough","getRenderingPreference","_d","type","startsWith","renderingContext","RenderingPreference","PRIORITY","LOW","INVALID","render"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Audio = exports.AudioRenderer = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nconst useSyncRef_1 = require(\"../utils/useSyncRef\");\nconst MediaLoader_1 = require(\"./MediaLoader\");\nconst RendererConfig_1 = require(\"./RendererConfig\");\nconst FakeWaveformCanvas = ({ audioRef, uri, audioColors, }) => {\n    const canvasRef = react_1.useRef(null);\n    const [width, setWidth] = react_1.useState();\n    const updateWidth = react_1.useCallback(() => {\n        var _a, _b, _c;\n        const newWidth = (_c = (_b = (_a = canvasRef.current) === null || _a === void 0 ? void 0 : _a.parentElement) === null || _b === void 0 ? void 0 : _b.getBoundingClientRect()) === null || _c === void 0 ? void 0 : _c.width;\n        if (newWidth && newWidth !== width) {\n            setWidth(newWidth);\n        }\n    }, [canvasRef.current]);\n    react_1.useEffect(() => {\n        updateWidth();\n        window.addEventListener(\"resize\", updateWidth);\n        return () => {\n            window.removeEventListener(\"resize\", updateWidth);\n        };\n    }, [updateWidth]);\n    const uriEntropy = react_1.useMemo(() => uri\n        .split(\"\")\n        .reduce((last, char) => last ^ (last + char.charCodeAt(0)), 0), [uri]);\n    react_1.useEffect(() => {\n        updateCanvasLines();\n        const updateInterval = setInterval(updateCanvasLines, 1000);\n        return () => clearInterval(updateInterval);\n    }, [width]);\n    const seekAudio = react_1.useCallback((evt) => {\n        if (audioRef.current && canvasRef.current && width) {\n            const position = (evt.clientX - canvasRef.current.getBoundingClientRect().left) /\n                width;\n            audioRef.current.currentTime = position * audioRef.current.duration;\n            audioRef.current.play();\n            updateCanvasLines();\n        }\n    }, [audioRef.current, width]);\n    const height = 200;\n    const updateCanvasLines = react_1.useCallback(() => {\n        if (canvasRef.current && width && audioRef.current) {\n            const context = canvasRef.current.getContext(\"2d\");\n            if (!context) {\n                return;\n            }\n            context.clearRect(0, 0, width, height);\n            for (let i = 0; i < width; i += 5) {\n                const sinRnd = Math.sin(i + uriEntropy) * 10000;\n                const lineHeight = Math.floor(Math.min(Math.sin((i / width) * 0.2) +\n                    2 * (sinRnd - Math.floor(sinRnd)) * 40, height));\n                if (audioRef.current.currentTime / audioRef.current.duration >\n                    i / width) {\n                    context.fillStyle = audioColors.progressColor;\n                }\n                else {\n                    context.fillStyle = audioColors.waveformColor;\n                }\n                context.fillRect(i, (height - lineHeight) / 2, 2, lineHeight);\n            }\n        }\n    }, [canvasRef.current, audioRef.current, width]);\n    return (jsx_runtime_1.jsx(\"canvas\", { ref: canvasRef, height: height, width: width, onClick: seekAudio }, void 0));\n};\nexports.AudioRenderer = react_1.forwardRef(({ request, getStyles, a11yIdPrefix, theme }, ref) => {\n    var _a, _b;\n    const uri = ((_a = request.media.content) === null || _a === void 0 ? void 0 : _a.uri) || ((_b = request.media.animation) === null || _b === void 0 ? void 0 : _b.uri);\n    const { props, loading, error } = MediaLoader_1.useMediaObjectProps({\n        uri,\n        request,\n        a11yIdPrefix,\n        getStyles,\n        preferredIPFSGateway: theme.preferredIPFSGateway,\n    });\n    const audioRef = react_1.useRef(null);\n    useSyncRef_1.useSyncRef(audioRef, ref);\n    const [playing, setPlaying] = react_1.useState(false);\n    const wrapper = react_1.useRef();\n    const togglePlay = react_1.useCallback((evt) => {\n        evt.preventDefault();\n        evt.stopPropagation();\n        if (audioRef.current) {\n            if (playing) {\n                audioRef.current.pause();\n            }\n            else {\n                audioRef.current.play();\n            }\n        }\n    }, [audioRef.current, playing]);\n    react_1.useEffect(() => {\n        if (!audioRef.current) {\n            return;\n        }\n        if (playing) {\n            audioRef.current.play();\n        }\n        else {\n            audioRef.current.pause();\n        }\n    }, [audioRef.current, playing]);\n    const playingText = playing ? \"Pause\" : \"Play\";\n    return (jsx_runtime_1.jsx(MediaLoader_1.MediaLoader, Object.assign({ getStyles: getStyles, loading: loading, error: error }, { children: jsx_runtime_1.jsxs(\"div\", Object.assign({ ref: wrapper }, getStyles(\"mediaAudioWrapper\"), { children: [!loading && (jsx_runtime_1.jsxs(react_1.Fragment, { children: [jsx_runtime_1.jsx(\"button\", Object.assign({ \"aria-live\": \"polite\", \"aria-pressed\": playing ? true : false, onClick: togglePlay, title: playingText }, getStyles(\"mediaPlayButton\", undefined, { playing }), { children: playingText }), void 0),\n                        jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"mediaAudioWaveform\"), { children: jsx_runtime_1.jsx(FakeWaveformCanvas, { uri: uri || \"\", audioRef: audioRef, audioColors: theme.audioColors }, void 0) }), void 0)] }, void 0)),\n                jsx_runtime_1.jsx(\"audio\", Object.assign({ loop: true, ref: audioRef, preload: \"auto\", playsInline: true, onPlay: () => setPlaying(true), onPause: () => setPlaying(false) }, props, { onLoadedData: props.onLoad, onCanPlayThrough: props.onLoad, onLoad: undefined }), void 0)] }), void 0) }), void 0));\n});\nexports.Audio = {\n    getRenderingPreference(request) {\n        var _a, _b, _c, _d;\n        if (((_b = (_a = request.media.content) === null || _a === void 0 ? void 0 : _a.type) === null || _b === void 0 ? void 0 : _b.startsWith(\"audio\")) ||\n            ((_d = (_c = request.media.animation) === null || _c === void 0 ? void 0 : _c.type) === null || _d === void 0 ? void 0 : _d.startsWith(\"audio\"))) {\n            return request.renderingContext === \"FULL\"\n                ? RendererConfig_1.RenderingPreference.PRIORITY\n                : RendererConfig_1.RenderingPreference.LOW;\n        }\n        return RendererConfig_1.RenderingPreference.INVALID;\n    },\n    render: exports.AudioRenderer,\n};\n"]},"metadata":{},"sourceType":"script"}