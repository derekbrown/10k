{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NFTProperties = void 0;\n\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\n\nconst react_1 = require(\"react\");\n\nconst react_2 = require(\"react\");\n\nconst useMediaContext_1 = require(\"../context/useMediaContext\");\n\nconst nft_hooks_1 = require(\"@zoralabs/nft-hooks\");\n\nconst NFTDataContext_1 = require(\"../context/NFTDataContext\");\n\nconst InfoContainer_1 = require(\"./InfoContainer\");\n\nconst NFTProperties = _ref => {\n  let {\n    className\n  } = _ref;\n  const {\n    nft: {\n      data\n    }\n  } = react_2.useContext(NFTDataContext_1.NFTDataContext);\n  const {\n    getStyles\n  } = useMediaContext_1.useMediaContext();\n  const {\n    metadata\n  } = nft_hooks_1.useNFTMetadata(data === null || data === void 0 ? void 0 : data.nft.metadataURI);\n\n  const renderAttributes = attributes => {\n    function formatAttributes(obj) {\n      if (Array.isArray(obj)) {\n        return obj;\n      } else {\n        const array = Object.keys(obj).length === 0 ? false : Object.entries(obj);\n\n        if (array !== false) {\n          return array.map(a => ({\n            trait_type: a[0],\n            value: a[1]\n          }));\n        } else {\n          return [];\n        }\n      }\n    }\n\n    const formattedAttributes = formatAttributes(attributes);\n\n    if (!attributes || !formattedAttributes.length) {\n      return null;\n    }\n\n    return jsx_runtime_1.jsx(InfoContainer_1.InfoContainer, Object.assign({\n      className: className,\n      titleString: \"PROPERTIES_TITLE\"\n    }, {\n      children: jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"propertiesGrid\"), {\n        children: formattedAttributes.map((attribute, index) => {\n          var _a;\n\n          return react_1.createElement(\"div\", Object.assign({}, getStyles(\"propertiesItem\"), {\n            key: `${(_a = data === null || data === void 0 ? void 0 : data.nft) === null || _a === void 0 ? void 0 : _a.tokenId}${index}`\n          }), (attribute === null || attribute === void 0 ? void 0 : attribute.trait_type) && jsx_runtime_1.jsx(\"span\", Object.assign({}, getStyles(\"propertiesLabel\"), {\n            children: attribute === null || attribute === void 0 ? void 0 : attribute.trait_type\n          }), void 0), (attribute === null || attribute === void 0 ? void 0 : attribute.value) && jsx_runtime_1.jsx(\"span\", {\n            children: attribute === null || attribute === void 0 ? void 0 : attribute.value\n          }, void 0));\n        })\n      }), void 0)\n    }), void 0);\n  };\n\n  const getContent = () => {\n    var _a;\n\n    if (data && metadata !== undefined && \"attributes\" in metadata) {\n      return renderAttributes(metadata === null || metadata === void 0 ? void 0 : metadata.attributes);\n    } else if (data && metadata !== undefined && \"traits\" in metadata) {\n      return renderAttributes(metadata === null || metadata === void 0 ? void 0 : metadata.traits);\n    } else if (data && metadata === undefined && \"openseaInfo\" in data) {\n      // @ts-ignore\n      return renderAttributes((_a = data === null || data === void 0 ? void 0 : data.openseaInfo) === null || _a === void 0 ? void 0 : _a.traits);\n    } else {\n      return jsx_runtime_1.jsx(react_2.Fragment, {}, void 0);\n    }\n  };\n\n  return data ? getContent() : null;\n};\n\nexports.NFTProperties = NFTProperties;","map":{"version":3,"sources":["/Users/derekbrown/workspace/10kdigits/node_modules/@zoralabs/nft-components/dist/nft-full/NFTProperties.js"],"names":["Object","defineProperty","exports","value","NFTProperties","jsx_runtime_1","require","react_1","react_2","useMediaContext_1","nft_hooks_1","NFTDataContext_1","InfoContainer_1","className","nft","data","useContext","NFTDataContext","getStyles","useMediaContext","metadata","useNFTMetadata","metadataURI","renderAttributes","attributes","formatAttributes","obj","Array","isArray","array","keys","length","entries","map","a","trait_type","formattedAttributes","jsx","InfoContainer","assign","titleString","children","attribute","index","_a","createElement","key","tokenId","getContent","undefined","traits","openseaInfo","Fragment"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NFTProperties = void 0;\nconst jsx_runtime_1 = require(\"react/jsx-runtime\");\nconst react_1 = require(\"react\");\nconst react_2 = require(\"react\");\nconst useMediaContext_1 = require(\"../context/useMediaContext\");\nconst nft_hooks_1 = require(\"@zoralabs/nft-hooks\");\nconst NFTDataContext_1 = require(\"../context/NFTDataContext\");\nconst InfoContainer_1 = require(\"./InfoContainer\");\nconst NFTProperties = ({ className }) => {\n    const { nft: { data }, } = react_2.useContext(NFTDataContext_1.NFTDataContext);\n    const { getStyles } = useMediaContext_1.useMediaContext();\n    const { metadata } = nft_hooks_1.useNFTMetadata(data === null || data === void 0 ? void 0 : data.nft.metadataURI);\n    const renderAttributes = (attributes) => {\n        function formatAttributes(obj) {\n            if (Array.isArray(obj)) {\n                return obj;\n            }\n            else {\n                const array = Object.keys(obj).length === 0 ? false : Object.entries(obj);\n                if (array !== false) {\n                    return array.map((a) => ({\n                        trait_type: a[0],\n                        value: a[1],\n                    }));\n                }\n                else {\n                    return [];\n                }\n            }\n        }\n        const formattedAttributes = formatAttributes(attributes);\n        if (!attributes || !formattedAttributes.length) {\n            return null;\n        }\n        return (jsx_runtime_1.jsx(InfoContainer_1.InfoContainer, Object.assign({ className: className, titleString: \"PROPERTIES_TITLE\" }, { children: jsx_runtime_1.jsx(\"div\", Object.assign({}, getStyles(\"propertiesGrid\"), { children: formattedAttributes.map((attribute, index) => {\n                    var _a;\n                    return (react_1.createElement(\"div\", Object.assign({}, getStyles(\"propertiesItem\"), { key: `${(_a = data === null || data === void 0 ? void 0 : data.nft) === null || _a === void 0 ? void 0 : _a.tokenId}${index}` }),\n                        (attribute === null || attribute === void 0 ? void 0 : attribute.trait_type) && (jsx_runtime_1.jsx(\"span\", Object.assign({}, getStyles(\"propertiesLabel\"), { children: attribute === null || attribute === void 0 ? void 0 : attribute.trait_type }), void 0)),\n                        (attribute === null || attribute === void 0 ? void 0 : attribute.value) && jsx_runtime_1.jsx(\"span\", { children: attribute === null || attribute === void 0 ? void 0 : attribute.value }, void 0)));\n                }) }), void 0) }), void 0));\n    };\n    const getContent = () => {\n        var _a;\n        if (data && metadata !== undefined && \"attributes\" in metadata) {\n            return renderAttributes(metadata === null || metadata === void 0 ? void 0 : metadata.attributes);\n        }\n        else if (data && metadata !== undefined && \"traits\" in metadata) {\n            return renderAttributes(metadata === null || metadata === void 0 ? void 0 : metadata.traits);\n        }\n        else if (data && metadata === undefined && \"openseaInfo\" in data) {\n            // @ts-ignore\n            return renderAttributes((_a = data === null || data === void 0 ? void 0 : data.openseaInfo) === null || _a === void 0 ? void 0 : _a.traits);\n        }\n        else {\n            return jsx_runtime_1.jsx(react_2.Fragment, {}, void 0);\n        }\n    };\n    return data ? getContent() : null;\n};\nexports.NFTProperties = NFTProperties;\n"]},"metadata":{},"sourceType":"script"}