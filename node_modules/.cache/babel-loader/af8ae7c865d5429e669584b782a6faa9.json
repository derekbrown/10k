{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useMediaContext = void 0;\n\nconst react_1 = require(\"react\");\n\nconst css_1 = require(\"@emotion/css\");\n\nconst MediaContext_1 = require(\"./MediaContext\");\n\nconst camelCase_1 = require(\"../utils/camelCase\");\n\nfunction useMediaContext() {\n  const mediaContext = react_1.useContext(MediaContext_1.MediaContext);\n\n  const getStyles = function (themeKey, className) {\n    let flags = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    if (!(themeKey in mediaContext.style.styles)) {\n      throw new Error(`\"${themeKey}\" not found in [${Object.keys(mediaContext.style.styles).join(\", \")}]`);\n    }\n\n    const styles = mediaContext.style.styles[themeKey](mediaContext.style.theme, flags);\n\n    const getUtilitySelectors = flagsObject => {\n      if (Object.keys(flagsObject).length) {\n        return Object.entries(flagsObject).map(key => {\n          const objectType = typeof key[1];\n          return objectType === \"boolean\" && key[1] ? `zora-${themeKey}--${key[0]}` : objectType === \"string\" ? `zora-${themeKey}__${key[0]}--${camelCase_1.camelCase(key[1])}` : \"\";\n        }).join(\" \");\n      } else {\n        return \"\";\n      }\n    };\n\n    return {\n      className: `${className ? `${className} ` : \"\"}zora-${themeKey}${mediaContext.style.useDefaultStyles ? ` ${css_1.css(styles)}` : \"\"} ${getUtilitySelectors(flags)}`\n    };\n  };\n\n  const getString = stringName => {\n    return mediaContext.strings[stringName];\n  };\n\n  return { ...mediaContext,\n    getString,\n    getStyles\n  };\n}\n\nexports.useMediaContext = useMediaContext;","map":{"version":3,"sources":["/Users/derekbrown/workspace/10kdigits/node_modules/@zoralabs/nft-components/dist/context/useMediaContext.js"],"names":["Object","defineProperty","exports","value","useMediaContext","react_1","require","css_1","MediaContext_1","camelCase_1","mediaContext","useContext","MediaContext","getStyles","themeKey","className","flags","style","styles","Error","keys","join","theme","getUtilitySelectors","flagsObject","length","entries","map","key","objectType","camelCase","useDefaultStyles","css","getString","stringName","strings"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,eAAR,GAA0B,KAAK,CAA/B;;AACA,MAAMC,OAAO,GAAGC,OAAO,CAAC,OAAD,CAAvB;;AACA,MAAMC,KAAK,GAAGD,OAAO,CAAC,cAAD,CAArB;;AACA,MAAME,cAAc,GAAGF,OAAO,CAAC,gBAAD,CAA9B;;AACA,MAAMG,WAAW,GAAGH,OAAO,CAAC,oBAAD,CAA3B;;AACA,SAASF,eAAT,GAA2B;AACvB,QAAMM,YAAY,GAAGL,OAAO,CAACM,UAAR,CAAmBH,cAAc,CAACI,YAAlC,CAArB;;AACA,QAAMC,SAAS,GAAG,UAACC,QAAD,EAAWC,SAAX,EAAqC;AAAA,QAAfC,KAAe,uEAAP,EAAO;;AACnD,QAAI,EAAEF,QAAQ,IAAIJ,YAAY,CAACO,KAAb,CAAmBC,MAAjC,CAAJ,EAA8C;AAC1C,YAAM,IAAIC,KAAJ,CAAW,IAAGL,QAAS,mBAAkBd,MAAM,CAACoB,IAAP,CAAYV,YAAY,CAACO,KAAb,CAAmBC,MAA/B,EAAuCG,IAAvC,CAA4C,IAA5C,CAAkD,GAA3F,CAAN;AACH;;AACD,UAAMH,MAAM,GAAGR,YAAY,CAACO,KAAb,CAAmBC,MAAnB,CAA0BJ,QAA1B,EAAoCJ,YAAY,CAACO,KAAb,CAAmBK,KAAvD,EAA8DN,KAA9D,CAAf;;AACA,UAAMO,mBAAmB,GAAIC,WAAD,IAAiB;AACzC,UAAIxB,MAAM,CAACoB,IAAP,CAAYI,WAAZ,EAAyBC,MAA7B,EAAqC;AACjC,eAAOzB,MAAM,CAAC0B,OAAP,CAAeF,WAAf,EACFG,GADE,CACGC,GAAD,IAAS;AACd,gBAAMC,UAAU,GAAG,OAAOD,GAAG,CAAC,CAAD,CAA7B;AACA,iBAAOC,UAAU,KAAK,SAAf,IAA4BD,GAAG,CAAC,CAAD,CAA/B,GACA,QAAOd,QAAS,KAAIc,GAAG,CAAC,CAAD,CAAI,EAD3B,GAEDC,UAAU,KAAK,QAAf,GACK,QAAOf,QAAS,KAAIc,GAAG,CAAC,CAAD,CAAI,KAAInB,WAAW,CAACqB,SAAZ,CAAsBF,GAAG,CAAC,CAAD,CAAzB,CAA8B,EADlE,GAEI,EAJV;AAKH,SARM,EASFP,IATE,CASG,GATH,CAAP;AAUH,OAXD,MAYK;AACD,eAAO,EAAP;AACH;AACJ,KAhBD;;AAiBA,WAAO;AACHN,MAAAA,SAAS,EAAG,GAAEA,SAAS,GAAI,GAAEA,SAAU,GAAhB,GAAqB,EAAG,QAAOD,QAAS,GAAEJ,YAAY,CAACO,KAAb,CAAmBc,gBAAnB,GAAuC,IAAGxB,KAAK,CAACyB,GAAN,CAAUd,MAAV,CAAkB,EAA5D,GAAgE,EAAG,IAAGK,mBAAmB,CAACP,KAAD,CAAQ;AAD/J,KAAP;AAGH,GAzBD;;AA0BA,QAAMiB,SAAS,GAAIC,UAAD,IAAgB;AAC9B,WAAOxB,YAAY,CAACyB,OAAb,CAAqBD,UAArB,CAAP;AACH,GAFD;;AAGA,SAAO,EAAE,GAAGxB,YAAL;AAAmBuB,IAAAA,SAAnB;AAA8BpB,IAAAA;AAA9B,GAAP;AACH;;AACDX,OAAO,CAACE,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.useMediaContext = void 0;\nconst react_1 = require(\"react\");\nconst css_1 = require(\"@emotion/css\");\nconst MediaContext_1 = require(\"./MediaContext\");\nconst camelCase_1 = require(\"../utils/camelCase\");\nfunction useMediaContext() {\n    const mediaContext = react_1.useContext(MediaContext_1.MediaContext);\n    const getStyles = (themeKey, className, flags = {}) => {\n        if (!(themeKey in mediaContext.style.styles)) {\n            throw new Error(`\"${themeKey}\" not found in [${Object.keys(mediaContext.style.styles).join(\", \")}]`);\n        }\n        const styles = mediaContext.style.styles[themeKey](mediaContext.style.theme, flags);\n        const getUtilitySelectors = (flagsObject) => {\n            if (Object.keys(flagsObject).length) {\n                return Object.entries(flagsObject)\n                    .map((key) => {\n                    const objectType = typeof key[1];\n                    return objectType === \"boolean\" && key[1]\n                        ? `zora-${themeKey}--${key[0]}`\n                        : objectType === \"string\"\n                            ? `zora-${themeKey}__${key[0]}--${camelCase_1.camelCase(key[1])}`\n                            : \"\";\n                })\n                    .join(\" \");\n            }\n            else {\n                return \"\";\n            }\n        };\n        return {\n            className: `${className ? `${className} ` : \"\"}zora-${themeKey}${mediaContext.style.useDefaultStyles ? ` ${css_1.css(styles)}` : \"\"} ${getUtilitySelectors(flags)}`,\n        };\n    };\n    const getString = (stringName) => {\n        return mediaContext.strings[stringName];\n    };\n    return { ...mediaContext, getString, getStyles };\n}\nexports.useMediaContext = useMediaContext;\n"]},"metadata":{},"sourceType":"script"}