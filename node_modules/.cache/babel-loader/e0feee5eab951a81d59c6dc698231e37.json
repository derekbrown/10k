{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.transformNFTIndexerResponse = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst big_js_1 = tslib_1.__importDefault(require(\"big.js\"));\n\nconst TransformFetchResults_1 = require(\"./TransformFetchResults\");\n\nfunction transformNFTIndexerResponse(data, auction, currency) {\n  var _a, _b, _c, _d, _e;\n\n  return {\n    nft: {\n      tokenId: data.tokenId.toString(),\n      contract: {\n        address: data.address,\n        name: (_b = (_a = data.tokenContract) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.toString(),\n        symbol: (_d = (_c = data.tokenContract) === null || _c === void 0 ? void 0 : _c.symbol) === null || _d === void 0 ? void 0 : _d.toString()\n      },\n      owner: data.owner,\n      creator: data.minter || undefined,\n      metadataURI: data.tokenURI || ''\n    },\n    zoraNFT: data.media ? {\n      // TODO(iain): make properly optional\n      createdAtTimestamp: ((_e = data.mintTransferEvent) === null || _e === void 0 ? void 0 : _e.blockTimestamp) || 0,\n      // TODO(iain): make properly optional\n      contentURI: data.media.contentURI || '',\n      contentHash: data.media.contentHash,\n      // TODO(iain): make properly optional\n      metadataURI: data.media.metadataURI || '',\n      metadataHash: data.media.metadataHash,\n      ownerBidShare: data.media.ownerBidShare,\n      ownerBidSharePercentage: data.media.ownerBidShare ? new big_js_1.default(data.media.ownerBidShare).div(new big_js_1.default(10).pow(18)).toNumber() : 0,\n      creatorBidShare: data.media.creatorBidShare,\n      creatorBidSharePercentage: data.media.creatorBidShare ? new big_js_1.default(data.media.creatorBidShare).div(new big_js_1.default(10).pow(18)).toNumber() : 0\n    } : undefined,\n    zoraIndexerResponse: data,\n    pricing: TransformFetchResults_1.addAuctionInformation({\n      reserve: TransformFetchResults_1.auctionDataToPricing(auction)\n    }, currency)\n  };\n}\n\nexports.transformNFTIndexerResponse = transformNFTIndexerResponse;","map":{"version":3,"sources":["/Users/derekbrown/workspace/10kdigits/node_modules/@zoralabs/nft-hooks/dist/fetcher/ZoraIndexerTransformers.js"],"names":["Object","defineProperty","exports","value","transformNFTIndexerResponse","tslib_1","require","big_js_1","__importDefault","TransformFetchResults_1","data","auction","currency","_a","_b","_c","_d","_e","nft","tokenId","toString","contract","address","name","tokenContract","symbol","owner","creator","minter","undefined","metadataURI","tokenURI","zoraNFT","media","createdAtTimestamp","mintTransferEvent","blockTimestamp","contentURI","contentHash","metadataHash","ownerBidShare","ownerBidSharePercentage","default","div","pow","toNumber","creatorBidShare","creatorBidSharePercentage","zoraIndexerResponse","pricing","addAuctionInformation","reserve","auctionDataToPricing"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.transformNFTIndexerResponse = void 0;\nconst tslib_1 = require(\"tslib\");\nconst big_js_1 = tslib_1.__importDefault(require(\"big.js\"));\nconst TransformFetchResults_1 = require(\"./TransformFetchResults\");\nfunction transformNFTIndexerResponse(data, auction, currency) {\n    var _a, _b, _c, _d, _e;\n    return {\n        nft: {\n            tokenId: data.tokenId.toString(),\n            contract: {\n                address: data.address,\n                name: (_b = (_a = data.tokenContract) === null || _a === void 0 ? void 0 : _a.name) === null || _b === void 0 ? void 0 : _b.toString(),\n                symbol: (_d = (_c = data.tokenContract) === null || _c === void 0 ? void 0 : _c.symbol) === null || _d === void 0 ? void 0 : _d.toString(),\n            },\n            owner: data.owner,\n            creator: data.minter || undefined,\n            metadataURI: data.tokenURI || '',\n        },\n        zoraNFT: data.media\n            ? {\n                // TODO(iain): make properly optional\n                createdAtTimestamp: ((_e = data.mintTransferEvent) === null || _e === void 0 ? void 0 : _e.blockTimestamp) || 0,\n                // TODO(iain): make properly optional\n                contentURI: data.media.contentURI || '',\n                contentHash: data.media.contentHash,\n                // TODO(iain): make properly optional\n                metadataURI: data.media.metadataURI || '',\n                metadataHash: data.media.metadataHash,\n                ownerBidShare: data.media.ownerBidShare,\n                ownerBidSharePercentage: data.media.ownerBidShare\n                    ? new big_js_1.default(data.media.ownerBidShare).div(new big_js_1.default(10).pow(18)).toNumber()\n                    : 0,\n                creatorBidShare: data.media.creatorBidShare,\n                creatorBidSharePercentage: data.media.creatorBidShare\n                    ? new big_js_1.default(data.media.creatorBidShare).div(new big_js_1.default(10).pow(18)).toNumber()\n                    : 0,\n            }\n            : undefined,\n        zoraIndexerResponse: data,\n        pricing: TransformFetchResults_1.addAuctionInformation({\n            reserve: TransformFetchResults_1.auctionDataToPricing(auction),\n        }, currency),\n    };\n}\nexports.transformNFTIndexerResponse = transformNFTIndexerResponse;\n"]},"metadata":{},"sourceType":"script"}