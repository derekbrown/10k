{"ast":null,"code":"import { useBaseQuery } from \"./utils/useBaseQuery.js\";\nexport function useLazyQuery(query, options) {\n  return useBaseQuery(query, options, true);\n}","map":{"version":3,"mappings":"AAIA,SAASA,YAAT,QAA6B,yBAA7B;AAGA,OAAM,SAAUC,YAAV,CACJC,KADI,EAEJC,OAFI,EAE6C;AAEjD,SAAOH,YAAY,CAAoBE,KAApB,EAA2BC,OAA3B,EAAoC,IAApC,CAAnB;AAID","names":["useBaseQuery","useLazyQuery","query","options"],"sourceRoot":"","sources":["../../../src/react/hooks/useLazyQuery.ts"],"sourcesContent":["import { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\n\nimport { LazyQueryHookOptions, QueryTuple } from '../types/types';\nimport { useBaseQuery } from './utils/useBaseQuery';\nimport { OperationVariables } from '../../core';\n\nexport function useLazyQuery<TData = any, TVariables = OperationVariables>(\n  query: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: LazyQueryHookOptions<TData, TVariables>\n) {\n  return useBaseQuery<TData, TVariables>(query, options, true) as QueryTuple<\n    TData,\n    TVariables\n  >;\n}\n"]},"metadata":{},"sourceType":"module"}