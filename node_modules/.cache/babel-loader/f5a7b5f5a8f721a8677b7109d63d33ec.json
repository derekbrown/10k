{"ast":null,"code":"var _jsxFileName = \"/Users/derekbrown/workspace/10kdigits/src/ENSInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ENSInfo(_ref) {\n  _s();\n\n  let {\n    number\n  } = _ref;\n  const [address, setAddress] = useState(null);\n  useEffect(() => {\n    async function getAddress() {\n      let provider = new ethers.providers.AlchemyProvider(null, \"92FsN3H0jQHXFn3_eNKYXY9IRPiMcnI7\");\n      console.log(provider);\n      await provider.resolveName(`${number}.eth`).then(async result => {\n        setAddress(result);\n      });\n    }\n\n    getAddress();\n  }, [number, setAddress]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-left w-full text-lg p-8 bg-gray-100 rounded-lg my-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Address:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }, this), \" \", address]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ENSInfo, \"UA9Pj5n2jJogwz13XhBcewiQL4Q=\");\n\n_c = ENSInfo;\nexport default ENSInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ENSInfo\");","map":{"version":3,"sources":["/Users/derekbrown/workspace/10kdigits/src/ENSInfo.js"],"names":["React","useEffect","useState","ethers","ENSInfo","number","address","setAddress","getAddress","provider","providers","AlchemyProvider","console","log","resolveName","then","result"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,QAAuB,QAAvB;;;AAEA,SAASC,OAAT,OAA2B;AAAA;;AAAA,MAAV;AAACC,IAAAA;AAAD,GAAU;AACzB,QAAM,CAAEC,OAAF,EAAWC,UAAX,IAA0BL,QAAQ,CAAC,IAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,mBAAeO,UAAf,GAA6B;AAC3B,UAAIC,QAAQ,GAAG,IAAIN,MAAM,CAACO,SAAP,CAAiBC,eAArB,CAAqC,IAArC,EAA2C,kCAA3C,CAAf;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ;AACA,YAAMA,QAAQ,CAACK,WAAT,CAAsB,GAAET,MAAO,MAA/B,EAAsCU,IAAtC,CAA2C,MAAMC,MAAN,IAAgB;AAC/DT,QAAAA,UAAU,CAACS,MAAD,CAAV;AACD,OAFK,CAAN;AAGD;;AACDR,IAAAA,UAAU;AACX,GATQ,EASN,CAACH,MAAD,EAASE,UAAT,CATM,CAAT;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,0DAAf;AAAA,2BACE;AAAA,8BAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAL,OAAgCD,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;GAnBQF,O;;KAAAA,O;AAqBT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { ethers } from \"ethers\";\n\nfunction ENSInfo({number}) {\n  const [ address, setAddress ] = useState(null);\n\n  useEffect(() => {\n    async function getAddress () {\n      let provider = new ethers.providers.AlchemyProvider(null, \"92FsN3H0jQHXFn3_eNKYXY9IRPiMcnI7\");\n      console.log(provider);\n      await provider.resolveName(`${number}.eth`).then(async result => {\n        setAddress(result)\n      })\n    }\n    getAddress();\n  }, [number, setAddress])\n\n  return (\n    <div className=\"text-left w-full text-lg p-8 bg-gray-100 rounded-lg my-8\">\n      <div><strong>Address:</strong> {address}</div>\n    </div>\n  );\n}\n\nexport default ENSInfo;"]},"metadata":{},"sourceType":"module"}