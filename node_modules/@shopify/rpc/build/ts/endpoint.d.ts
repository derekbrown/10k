import { MessageEndpoint, RemoteCallable, FunctionStrategy, FunctionStrategyOptions } from './types';
interface Options {
    uuid?(): string;
    createFunctionStrategy?(options: FunctionStrategyOptions): FunctionStrategy<unknown>;
}
export interface Endpoint<T> {
    readonly call: RemoteCallable<T>;
    readonly functions: FunctionStrategy<unknown>;
    replace(messenger: MessageEndpoint): void;
    expose(api: {
        [key: string]: Function | undefined;
    }): void;
    terminate(): void;
}
export declare function createEndpoint<T>(initialMessenger: MessageEndpoint, { uuid, createFunctionStrategy, }?: Options): Endpoint<T>;
export {};
//# sourceMappingURL=endpoint.d.ts.map