import { Button } from '@chakra-ui/react';
import { useWallet, Provider as Provider$2 } from '@web3-ui/hooks';
export { CHAIN_ID_TO_NETWORK, NETWORKS, Web3Context, useTokenBalance, useTransaction, useWallet, useWriteContract } from '@web3-ui/hooks';
import React from 'react';
import { Provider as Provider$1 } from '@web3-ui/components';

var ConnectWallet = function ConnectWallet() {
  var _useWallet = useWallet(),
      connectWallet = _useWallet.connectWallet,
      connection = _useWallet.connection,
      connected = _useWallet.connected,
      disconnectWallet = _useWallet.disconnectWallet;

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {
    onClick: connected ? disconnectWallet : connectWallet
  }, connected ? connection.ens || connection.userAddress : 'Connect wallet'));
};

var Provider = function Provider(_ref) {
  var network = _ref.network,
      children = _ref.children,
      rpcUrl = _ref.rpcUrl;
  return /*#__PURE__*/React.createElement(Provider$1, null, /*#__PURE__*/React.createElement(Provider$2, {
    network: network,
    rpcUrl: rpcUrl
  }, children));
};

export { ConnectWallet, Provider };
