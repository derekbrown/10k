import { JsonRpcSigner } from '@ethersproject/providers';
import { ethers } from 'ethers';
import React from 'react';
import { IProviderOptions } from 'web3modal';
import { StaticJsonRpcProvider } from '@ethersproject/providers';
export interface Web3ContextType {
    connectWallet?: () => Promise<void>;
    signer?: JsonRpcSigner | null;
    userAddress?: string | null;
    disconnectWallet?: () => void;
    error?: string;
    chainId?: number | null;
    connected: boolean;
    provider?: ethers.providers.Web3Provider | null;
    correctNetwork: boolean;
    network?: number;
    readOnlyProvider?: StaticJsonRpcProvider;
}
export declare const Web3Context: React.Context<Web3ContextType | undefined>;
export interface ProviderProps {
    /**
     * @dev The network you want to connect to.
     * @example NETWORKS.mainnet
     * @type string
     */
    network?: number;
    /**
     * @dev Your Infura project ID. This is required if you want to support WalletConnect.
     * @type string
     */
    infuraId?: string;
    /**
     * @dev An array of extra Wallet Providers you want to support.
     * @type [
        [id: string]: {
            package: any;
            options?: any;
            connector?: Connector;
            display?: Partial<IProviderDisplay>;
          };
        ]
     */
    extraWalletProviders?: [IProviderOptions];
    /**
     * @dev The JSON RPC provider URL you want to use for read only operations. eg. https://mainnet.infura.io/v3/YOUR_INFURA_KEY
     * @type string
     */
    rpcUrl?: string;
}
/**
 * @dev The global provider that handles and stores all the web3 connections. Wrap your entire App with this component.
 * @param children Your app.
 * @param network The network you want to connect to.
 * @param infuraId Your Infura project ID. This is required if you want to support WalletConnect.
 * @param extraWalletProviders An array of extra Wallet Providers you want to support.
 */
export declare const Provider: React.FC<ProviderProps>;
