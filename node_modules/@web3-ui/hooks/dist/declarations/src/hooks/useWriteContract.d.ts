import { Contract, ContractInterface } from 'ethers';
/**
 * @description
 * Defines the contract instance on `useState` hook
 */
export declare type ContractInstance<T extends Contract> = T | null;
/**
 * @description
 * The return type of the `useWriteContract` hook
 */
export declare type UseWriteContractHook<T extends Contract> = [
    ContractInstance<T> | null,
    boolean
];
/**
 * Gets an instance of a contract from its ABI and address.
 * @param address contract address
 * @param abi contract ABI
 * @returns {
 *   contract: An instance of the current contract
 *   isReady: True when the contract is ready to use, false otherwise.
 * }
 */
export declare function useWriteContract<T extends Contract>(address: string, abi: ContractInterface): UseWriteContractHook<T>;
