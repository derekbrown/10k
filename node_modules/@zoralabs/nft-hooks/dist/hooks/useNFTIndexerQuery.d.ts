import { SWRConfiguration } from 'swr';
import { IndexerTokenWithAuctionFragment } from '../graph-queries/zora-indexer-types';
export declare type useNFTType = {
    error?: string;
    results?: IndexerTokenWithAuctionFragment[];
};
declare type OptionsType = SWRConfiguration;
declare type QueryType = {
    collectionAddresses: string[];
    curatorAddress?: string;
    approved?: boolean;
    onlyAuctions?: boolean;
    owner?: string;
    offset?: number;
    limit?: number;
};
/**
 * Fetches on-chain NFT data and pricing for the given zNFT id
 *
 * @param contractAddresses address of the contract, if null and tokenID is passed in, a ZNFT is assumed
 * @param tokenId id of NFT to fetch blockchain information for
 * @param approved Auction status approved fetch boolean true = only approved, false = only not approved, null/undefined = any
 * @param options SWR flags and an option to load currency info
 * @returns useNFTType hook results include loading, error, and chainNFT data.
 */
export declare function useNFTIndexerQuery({ collectionAddresses, curatorAddress, onlyAuctions, approved, owner, limit, offset, }: QueryType, options?: OptionsType): useNFTType;
export {};
